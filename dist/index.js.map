{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/defaults.ts","../src/components/Header.tsx","../src/components/Day.tsx","../src/types.ts","../src/components/Month.tsx","../src/components/DefinedRanges.tsx","../src/components/Markers.ts","../src/components/Menu.tsx","../src/components/DateRangePicker.tsx","../src/components/DateRangePickerWrapper.tsx","../src/components/DateRangePickerExporter.tsx"],"sourcesContent":["import {\n  startOfWeek,\n  startOfMonth,\n  endOfWeek,\n  endOfMonth,\n  isBefore,\n  addDays,\n  isSameDay,\n  isWithinInterval,\n  isSameMonth,\n  addMonths,\n  parseISO,\n  isValid,\n  min,\n  max,\n} from 'date-fns';\nimport { DateRange } from './types';\n\nexport const identity = <T>(x: T) => x;\n\nexport const chunks = <T>(array: ReadonlyArray<T>, size: number): T[][] => (\n  Array.from(\n    { length: Math.ceil(array.length / size) },\n    (_v, i) => array.slice(i * size, i * size + size),\n  )\n);\n\n// Date\nexport const getDaysInMonth = (date: Date, locale?: Locale) => {\n  const startWeek = startOfWeek(startOfMonth(date), {locale});\n  const endWeek = endOfWeek(endOfMonth(date), {locale});\n  const days = [];\n  for (let curr = startWeek; isBefore(curr, endWeek);) {\n    days.push(curr);\n    curr = addDays(curr, 1);\n  }\n  return days;\n};\n\nexport const isStartOfRange = ({ startDate }: DateRange, day: Date) => (\n  (startDate && isSameDay(day, startDate)) as boolean\n);\n\nexport const isEndOfRange = ({ endDate }: DateRange, day: Date) => (\n  (endDate && isSameDay(day, endDate)) as boolean\n);\n\nexport const inDateRange = ({ startDate, endDate }: DateRange, day: Date) => (\n  startDate\n  && endDate\n  && (isWithinInterval(day, { start: startDate, end: endDate })\n  || isSameDay(day, startDate)\n  || isSameDay(day, endDate))\n) as boolean;\n\nexport const isRangeSameDay = ({ startDate, endDate }: DateRange) => {\n  if (startDate && endDate) {\n    return isSameDay(startDate, endDate);\n  }\n  return false;\n};\n\ntype Falsy = false | null | undefined | 0 | '';\n\nexport const parseOptionalDate = (date: Date | string | Falsy, defaultValue: Date) => {\n  if (date) {\n    const parsed = date instanceof Date ? date : parseISO(date);\n    if (isValid(parsed)) return parsed;\n  }\n  return defaultValue;\n};\n\nexport const getValidatedMonths = (range: DateRange, minDate: Date, maxDate: Date) => {\n  const { startDate, endDate } = range;\n  if (startDate && endDate) {\n    const newStart = max([startDate, minDate]);\n    const newEnd = min([endDate, maxDate]);\n\n    return [newStart, isSameMonth(newStart, newEnd) ? addMonths(newStart, 1) : newEnd];\n  }\n  return [startDate, endDate];\n};\n","import {\n  addDays,\n  startOfWeek,\n  endOfWeek,\n  addWeeks,\n  startOfMonth,\n  endOfMonth,\n  addMonths,\n  startOfYear,\n  endOfYear,\n  addYears,\n  startOfDay,\n} from 'date-fns';\n\n// eslint-disable-next-line no-unused-vars\nimport { DefinedRange, Labels } from './types';\n\nexport const getDefaultRanges = (date: Date, locale?: Locale, labels?: Labels): DefinedRange[] => [\n  {\n    label: labels?.today || 'Today',\n    startDate: startOfDay(date),\n    endDate: date,\n  },\n  {\n    label: labels?.yesterday || 'Yesterday',\n    startDate: startOfDay(addDays(date, -1)),\n    endDate: addDays(date, -1),\n  },\n  {\n    label: labels?.thisWeek || 'This Week',\n    startDate: startOfWeek(date, { locale }),\n    endDate: endOfWeek(date, { locale }),\n  },\n  {\n    label: labels?.lastWeek || 'Last Week',\n    startDate: startOfWeek(addWeeks(date, -1), { locale }),\n    endDate: endOfWeek(addWeeks(date, -1), { locale }),\n  },\n  {\n    label: labels?.lastThirtyDays || 'Last 30 Days',\n    startDate: addDays(date, -30),\n    endDate: date,\n  },\n  {\n    label: labels?.thisMonth || 'This Month',\n    startDate: startOfMonth(date),\n    endDate: endOfMonth(date),\n  },\n  {\n    label: labels?.lastMonth || 'Last Month',\n    startDate: startOfMonth(addMonths(date, -1)),\n    endDate: endOfMonth(addMonths(date, -1)),\n  },\n  {\n    label: labels?.thisYear || 'This Year',\n    startDate: startOfYear(date),\n    endDate: endOfYear(date),\n  },\n  {\n    label: labels?.lastYear || 'Last Year',\n    startDate: startOfYear(addYears(date, -1)),\n    endDate: endOfYear(addYears(date, -1)),\n  },\n];\n","import {FormControl, Grid, IconButton, MenuItem, Select, SelectChangeEvent} from '@mui/material';\nimport React from 'react';\nimport ChevronLeft from '@mui/icons-material/ChevronLeft';\nimport ChevronRight from '@mui/icons-material/ChevronRight';\nimport {getMonth, getYear, setMonth, setYear} from 'date-fns';\n\ninterface HeaderProps {\n  date: Date;\n  // eslint-disable-next-line no-unused-vars\n  setDate: (date: Date) => void;\n  nextDisabled: boolean;\n  prevDisabled: boolean;\n  onClickNext: () => void;\n  onClickPrevious: () => void;\n  locale?: Locale;\n}\n\nconst generateYears = (relativeTo: Date, count: number) => {\n  const half = Math.floor(count / 2);\n  return Array(count)\n    .fill(0)\n    .map((_y, i) => relativeTo.getFullYear() - half + i); // TODO: make part of the state\n};\n\nconst Header: React.FunctionComponent<HeaderProps> = ({\n  date,\n  setDate,\n  nextDisabled,\n  prevDisabled,\n  onClickNext,\n  onClickPrevious,\n  locale\n}: HeaderProps) => {\n  const MONTHS = typeof locale !== 'undefined'\n    ? [...Array(12).keys()].map(d => locale.localize?.month(d, {width: 'abbreviated', context: 'standalone'}))\n    : ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n\n  const handleMonthChange = (event: SelectChangeEvent<number>) => {\n    setDate(setMonth(date, parseInt(event.target.value as string, 10)));\n  };\n\n  const handleYearChange = (event: SelectChangeEvent<number>) => {\n    setDate(setYear(date, parseInt(event.target.value as string, 10)));\n  };\n\n  return (\n    <Grid\n      container\n      sx={{\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      }}>\n      <Grid item sx={{ padding: '5px' }}>\n        <IconButton\n          sx={{\n            padding: '10px',\n            '&:hover': {\n              background: 'none',\n            },\n          }}\n          disabled={prevDisabled}\n          onClick={onClickPrevious}\n          // size=\"large\"\n        >\n          <ChevronLeft color={prevDisabled ? 'disabled' : 'action'} />\n        </IconButton>\n      </Grid>\n      <Grid item>\n        <FormControl variant=\"standard\">\n          <Select\n            value={getMonth(date)}\n            onChange={handleMonthChange}\n            MenuProps={{disablePortal: true}}\n          >\n            {MONTHS.map((month, idx) => (\n              <MenuItem key={month} value={idx}>\n                {month}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item>\n        <FormControl variant=\"standard\">\n          <Select\n            value={getYear(date)}\n            onChange={handleYearChange}\n            MenuProps={{ disablePortal: true }}\n          >\n            {generateYears(date, 30).map((year) => (\n              <MenuItem key={year} value={year}>\n                {year}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        {/* <Typography>{format(date, \"MMMM YYYY\")}</Typography> */}\n      </Grid>\n      <Grid item sx={{ padding: '5px' }}>\n        <IconButton\n          sx={{\n            padding: '10px',\n            '&:hover': {\n              background: 'none',\n            },\n          }}\n          disabled={nextDisabled}\n          onClick={onClickNext}\n          // size=\"large\"\n        >\n          <ChevronRight color={nextDisabled ? 'disabled' : 'action'} />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { IconButton, Typography, Box } from '@mui/material';\n\ninterface DayProps {\n  filled?: boolean;\n  outlined?: boolean;\n  highlighted?: boolean;\n  disabled?: boolean;\n  startOfRange?: boolean;\n  endOfRange?: boolean;\n  onClick?: () => void;\n  onHover?: () => void;\n  value: number | string;\n}\n\nconst Day: React.FunctionComponent<DayProps> = ({\n  startOfRange,\n  endOfRange,\n  disabled,\n  highlighted,\n  outlined,\n  filled,\n  onClick,\n  onHover,\n  value,\n}: DayProps) => {\n\n  return (\n    <Box\n      sx={[{\n        display: 'flex',\n        backgroundColor: (theme) => !disabled && highlighted ? theme.palette.primary.light : undefined\n      }, startOfRange ? {\n        borderRadius: '50% 0 0 50%'\n      } : {\n        borderRadius: endOfRange ? '0 50% 50% 0' : undefined\n      }]}\n    >\n      <IconButton\n        sx={[{\n          height: '36px',\n          width: '36px',\n          padding: 0,\n          border: (theme) => !disabled && outlined ? `1px solid ${theme.palette.primary.dark}` : undefined\n        }, (!disabled && filled ? {\n          '&:hover': {\n            backgroundColor: (theme) => theme.palette.primary.dark,\n          },\n          backgroundColor: (theme) => theme.palette.primary.dark,\n        } : {})]}\n        disabled={disabled}\n        onClick={onClick}\n        onMouseOver={onHover}\n        // size=\"large\"\n      >\n        <Typography\n          sx={{\n            lineHeight: 1.6,\n            color: (theme) => !disabled\n              ? (filled ? theme.palette.primary.contrastText : theme.palette.text.primary)\n              : theme.palette.text.secondary,\n          }}\n          variant=\"body2\"\n        >\n          {value}\n        </Typography>\n      </IconButton>\n    </Box>\n  );\n};\n\nexport default Day;\n","import React from 'react';\n\nexport interface DateRange {\n  startDate?: Date;\n  endDate?: Date;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport type Setter<T> = React.Dispatch<React.SetStateAction<T>> | ((value: T) => void);\n\nexport enum NavigationAction {\n  // eslint-disable-next-line no-unused-vars\n  Previous = -1,\n\n  // eslint-disable-next-line no-unused-vars\n  Next = 1\n}\n\nexport type DefinedRange = {\n  startDate: Date;\n  endDate: Date;\n  label: string;\n};\n\nexport interface Labels {\n  today: string;\n  yesterday: string;\n  thisWeek: string;\n  lastWeek: string;\n  lastThirtyDays: string;\n  thisMonth: string;\n  lastMonth: string;\n  thisYear: string;\n  lastYear: string;\n}\n\nexport interface MenuLabels {\n  startDateLabel: string;\n  endDateLabel: string;\n}\n\nexport interface MenuButton {\n  text: string;\n  onClick: () => void;\n}\n","import React from \"react\";\nimport { Paper, Grid, Typography } from \"@mui/material\";\nimport {\n  getDate, isSameMonth, isToday, format, isWithinInterval\n} from \"date-fns\";\nimport {\n  chunks, getDaysInMonth, isStartOfRange, isEndOfRange, inDateRange, isRangeSameDay\n} from \"../utils\";\nimport Header from \"./Header\";\nimport Day from \"./Day\";\n\nimport { NavigationAction, DateRange } from \"../types\";\n\n\ninterface MonthProps {\n  value: Date;\n  marker: symbol;\n  dateRange: DateRange;\n  minDate: Date;\n  maxDate: Date;\n  navState: [boolean, boolean];\n  // eslint-disable-next-line no-unused-vars\n  setValue: (date: Date) => void;\n  helpers: {\n    // eslint-disable-next-line no-unused-vars\n    inHoverRange: (day: Date) => boolean;\n  };\n  handlers: {\n    // eslint-disable-next-line no-unused-vars\n    onDayClick: (day: Date) => void;\n    // eslint-disable-next-line no-unused-vars\n    onDayHover: (day: Date) => void;\n    // eslint-disable-next-line no-unused-vars\n    onMonthNavigate: (marker: symbol, action: NavigationAction) => void;\n  };\n  locale?: Locale;\n  bgColor?: string;\n}\n\nconst Month: React.FunctionComponent<MonthProps> = (props: MonthProps) => {\n  const {\n    helpers,\n    handlers,\n    value: date,\n    dateRange,\n    marker,\n    setValue: setDate,\n    minDate,\n    maxDate,\n    locale,\n    bgColor\n  } = props;\n\n  const weekStartsOn = locale?.options?.weekStartsOn || 0;\n  const WEEK_DAYS = typeof locale !== 'undefined'\n    ? [...Array(7).keys()].map(d => locale.localize?.day((d+weekStartsOn) % 7, {width: 'short', context: 'standalone'}))\n    : [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"];\n  const [back, forward] = props.navState;\n\n  return (\n    <Paper square elevation={0} sx={{ width: 290, backgroundColor: bgColor }}>\n      <Grid container sx={[bgColor ? {\n        bgcolor: bgColor\n      } : {\n        bgcolor: 'transparent'\n      }]}>\n        <Header\n          date={date}\n          setDate={setDate}\n          nextDisabled={!forward}\n          prevDisabled={!back}\n          onClickPrevious={() => handlers.onMonthNavigate(marker, NavigationAction.Previous)}\n          onClickNext={() => handlers.onMonthNavigate(marker, NavigationAction.Next)}\n          locale={locale}\n        />\n        <Grid\n          item\n          container\n          direction=\"row\"\n          sx={{\n            justifyContent: \"space-between\",\n            marginTop: \"10px\",\n            paddingLeft: \"30px\",\n            paddingRight: \"30px\"\n          }}>\n          {WEEK_DAYS.map((day, index) => (\n            <Typography color=\"textSecondary\" key={index} variant=\"caption\">\n              {day}\n            </Typography>\n          ))}\n        </Grid>\n\n        <Grid\n          item\n          container\n          direction=\"column\"\n          sx={{\n            justifyContent: \"space-between\",\n            paddingLeft: '15px',\n            paddingRight: '15px',\n            marginTop: '15px',\n            marginBottom: '20px'\n          }}>\n          {chunks(getDaysInMonth(date, locale), 7).map((week, idx) => (\n            <Grid key={idx} container direction=\"row\" sx={{\n              justifyContent: \"center\"\n            }}>\n              {week.map((day) => {\n                const isStart = isStartOfRange(dateRange, day);\n                const isEnd = isEndOfRange(dateRange, day);\n                const isRangeOneDay = isRangeSameDay(dateRange);\n                const highlighted = inDateRange(dateRange, day) || helpers.inHoverRange(day);\n                return (\n                  <Day\n                    key={format(day, \"dd-MM-yyyy\")}\n                    filled={isStart || isEnd}\n                    outlined={isToday(day)}\n                    highlighted={highlighted && !isRangeOneDay}\n                    disabled={\n                      !isSameMonth(date, day)\n                      || !isWithinInterval(day, { start: minDate, end: maxDate })\n                    }\n                    startOfRange={isStart && !isRangeOneDay}\n                    endOfRange={isEnd && !isRangeOneDay}\n                    onClick={() => handlers.onDayClick(day)}\n                    onHover={() => handlers.onDayHover(day)}\n                    value={getDate(day)}\n                  />\n                );\n              })}\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\nexport default Month;","import React from 'react';\nimport {List, ListItemButton, ListItemText} from '@mui/material';\nimport {isSameDay} from 'date-fns';\nimport {DateRange, DefinedRange} from '../types';\n\ntype DefinedRangesProps = {\n  // eslint-disable-next-line no-unused-vars\n  setRange: (range: DateRange) => void;\n  selectedRange: DateRange;\n  ranges: DefinedRange[];\n};\n\nconst isSameRange = (first: DateRange, second: DateRange) => {\n  const { startDate: fStart, endDate: fEnd } = first;\n  const { startDate: sStart, endDate: sEnd } = second;\n  if (fStart && sStart && fEnd && sEnd) {\n    return isSameDay(fStart, sStart) && isSameDay(fEnd, sEnd);\n  }\n  return false;\n};\n\nconst DefinedRanges: React.FunctionComponent<DefinedRangesProps> = ({\n  ranges,\n  setRange,\n  selectedRange,\n}: DefinedRangesProps) => (\n  <List>\n    {ranges.map((range, idx) => (\n      <ListItemButton\n                key={idx}\n                onClick={() => setRange(range)}\n                sx={[\n                  isSameRange(range, selectedRange) && {\n                    backgroundColor: (theme) => theme.palette.primary.dark,\n                    color: 'primary.contrastText',\n                    '&:hover': {\n                      color: 'inherit'\n                    }\n                  }]}\n      >\n        <ListItemText\n          primaryTypographyProps={{\n            variant: 'body2',\n            sx: {\n              fontWeight: isSameRange(range, selectedRange)\n                ? 'bold'\n                : 'normal',\n            },\n          }}\n        >\n          {range.label}\n        </ListItemText>\n      </ListItemButton>\n    ))}\n  </List>\n);\nexport default DefinedRanges;\n","export type Marker = symbol;\n\nexport const MARKERS: { [key: string]: Marker } = {\n  FIRST_MONTH: Symbol('firstMonth'),\n  SECOND_MONTH: Symbol('secondMonth'),\n};\n","/* eslint-disable object-curly-newline */\nimport React from \"react\";\nimport { Divider, Grid, Typography, Button } from \"@mui/material\";\nimport { differenceInCalendarMonths, format } from \"date-fns\";\nimport ArrowRightAlt from \"@mui/icons-material/ArrowRightAlt\";\nimport Month from \"./Month\";\nimport DefinedRanges from \"./DefinedRanges\";\nimport { DateRange, DefinedRange, Setter, NavigationAction, MenuLabels, MenuButton } from \"../types\";\nimport { MARKERS } from \"./Markers\";\n\ninterface MenuProps {\n  dateRange: DateRange;\n  ranges: DefinedRange[];\n  minDate: Date;\n  maxDate: Date;\n  firstMonth: Date;\n  secondMonth: Date;\n  setFirstMonth: Setter<Date>;\n  setSecondMonth: Setter<Date>;\n  setDateRange: Setter<DateRange>;\n  helpers: {\n    // eslint-disable-next-line no-unused-vars\n    inHoverRange: (day: Date) => boolean;\n  };\n  handlers: {\n    // eslint-disable-next-line no-unused-vars\n    onDayClick: (day: Date) => void;\n    // eslint-disable-next-line no-unused-vars\n    onDayHover: (day: Date) => void;\n    // eslint-disable-next-line no-unused-vars\n    onMonthNavigate: (marker: symbol, action: NavigationAction) => void;\n  };\n  locale?: Locale;\n  labels?: MenuLabels;\n  button?: MenuButton;\n  bgColor?: string;\n  definedRangesMenuIsShown?: boolean;\n  buttonMargin?: string | number;\n}\n\nconst Menu: React.FunctionComponent<MenuProps> = (props: MenuProps) => {\n  const {\n    ranges,\n    dateRange,\n    minDate,\n    maxDate,\n    firstMonth,\n    setFirstMonth,\n    secondMonth,\n    setSecondMonth,\n    setDateRange,\n    helpers,\n    handlers,\n    locale,\n    labels,\n    button,\n    bgColor,\n    definedRangesMenuIsShown,\n    buttonMargin,\n  } = props;\n\n  const { startDate, endDate } = dateRange;\n  const canNavigateCloser = differenceInCalendarMonths(secondMonth, firstMonth) >= 2;\n  const commonProps = {\n    dateRange,\n    minDate,\n    maxDate,\n    helpers,\n    handlers,\n  };\n  return (\n    <Grid\n      container\n      wrap=\"nowrap\"\n      sx={[{\n        display: \"inline-flex\"\n      }, bgColor ? {\n        bgcolor: bgColor\n      } : {\n        bgcolor: 'transparent'\n      }]}>\n      {definedRangesMenuIsShown && (\n        <>\n          <Grid>\n            <DefinedRanges selectedRange={dateRange} ranges={ranges} setRange={setDateRange} />\n          </Grid>\n          <Divider orientation=\"vertical\" flexItem />\n        </>\n      )}\n      <Grid>\n        <Grid\n          container\n          sx={{\n            alignItems: \"center\",\n            padding: \"20px 70px\"\n          }}>\n          <Grid item sx={{ flex: 1, textAlign: \"center\" }}>\n            <Typography variant=\"subtitle1\">\n              {startDate ? format(startDate, \"dd MMMM yyyy\", { locale }) : labels?.startDateLabel || \"Start Date\"}\n            </Typography>\n          </Grid>\n          <Grid item sx={{ flex: 1, textAlign: \"center\" }}>\n            <ArrowRightAlt color=\"action\" />\n          </Grid>\n          <Grid item sx={{ flex: 1, textAlign: \"center\" }}>\n            <Typography variant=\"subtitle1\">\n              {endDate ? format(endDate, \"dd MMMM yyyy\", { locale }) : labels?.endDateLabel || \"End Date\"}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider />\n        <Grid container direction=\"column\" sx={{\n          justifyContent: \"center\"\n        }}>\n          <Grid container direction=\"row\" sx={{\n            justifyContent: \"center\"\n          }}>\n            <Month\n              {...commonProps}\n              value={firstMonth}\n              setValue={setFirstMonth}\n              navState={[true, canNavigateCloser]}\n              marker={MARKERS.FIRST_MONTH}\n              locale={locale}\n              bgColor={bgColor}\n            />\n            <Month\n              {...commonProps}\n              value={secondMonth}\n              setValue={setSecondMonth}\n              navState={[canNavigateCloser, true]}\n              marker={MARKERS.SECOND_MONTH}\n              locale={locale}\n              bgColor={bgColor}\n            />\n          </Grid>\n          {button && (\n            <Grid container sx={{\n              justifyContent: \"center\"\n            }}>\n              <Button\n                variant=\"contained\"\n                sx={[{\n                  textTransform: 'none'\n                }, buttonMargin ? {\n                  marginBottom: buttonMargin\n                } : {\n                  marginBottom: 0\n                }]}\n                onClick={button.onClick}\n              >\n                {button.text ? button.text : \"Apply\"}\n              </Button>\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Menu;\n","import * as React from 'react';\nimport {\n  addMonths, addYears, isAfter, isBefore, isSameDay, isSameMonth, isWithinInterval, max, min,\n} from 'date-fns';\nimport {\n  DateRange, DefinedRange, NavigationAction, Labels, MenuLabels, MenuButton,\n} from '../types';\nimport { getValidatedMonths, parseOptionalDate } from '../utils';\nimport { getDefaultRanges } from '../defaults';\nimport Menu from './Menu';\nimport { Marker, MARKERS } from './Markers';\n\ninterface DateRangePickerProps {\n  open: boolean;\n  initialDateRange?: DateRange;\n  definedRanges?: DefinedRange[];\n  minDate?: Date | string;\n  maxDate?: Date | string;\n  // eslint-disable-next-line no-unused-vars\n  onChange: (dateRange: DateRange) => void;\n  locale?: Locale;\n  labels?: Labels;\n  menuLabels?: MenuLabels;\n  menuButton?: MenuButton;\n  bgColor?: string;\n  definedRangesMenuIsShown?: boolean;\n  buttonMargin?: string | number;\n}\n\nconst DateRangePicker: React.FunctionComponent<DateRangePickerProps> = (\n  props: DateRangePickerProps,\n) => {\n  const today = new Date();\n\n  const {\n    open,\n    onChange,\n    initialDateRange,\n    minDate,\n    maxDate,\n    definedRanges = getDefaultRanges(new Date(), props.locale, props.labels),\n    locale,\n    menuLabels,\n    menuButton,\n    bgColor,\n    definedRangesMenuIsShown,\n    buttonMargin,\n  } = props;\n\n  const minDateValid = parseOptionalDate(minDate, addYears(today, -10));\n  const maxDateValid = parseOptionalDate(maxDate, addYears(today, 10));\n  const [initialFirstMonth, initialSecondMonth] = getValidatedMonths(\n    initialDateRange || {},\n    minDateValid,\n    maxDateValid,\n  );\n\n  const [dateRange, setDateRange] = React.useState<DateRange>({ ...initialDateRange });\n  const [hoverDay, setHoverDay] = React.useState<Date>();\n  const [firstMonth, setFirstMonth] = React.useState<Date>(initialFirstMonth || today);\n  const [secondMonth, setSecondMonth] = React.useState<Date>(\n    initialSecondMonth || addMonths(firstMonth, 1),\n  );\n\n  const { startDate, endDate } = dateRange;\n\n  // handlers\n  const setFirstMonthValidated = (date: Date) => {\n    if (isBefore(date, secondMonth)) {\n      setFirstMonth(date);\n    }\n  };\n\n  const setSecondMonthValidated = (date: Date) => {\n    if (isAfter(date, firstMonth)) {\n      setSecondMonth(date);\n    }\n  };\n\n  const setDateRangeValidated = (range: DateRange) => {\n    let { startDate: newStart, endDate: newEnd } = range;\n\n    if (newStart && newEnd) {\n      range.startDate = newStart = max([newStart, minDateValid]);\n      range.endDate = newEnd = min([newEnd, maxDateValid]);\n\n      setDateRange(range);\n      onChange(range);\n\n      setFirstMonth(newStart);\n      setSecondMonth(isSameMonth(newStart, newEnd) ? addMonths(newStart, 1) : newEnd);\n    } else {\n      const emptyRange = {};\n\n      setDateRange(emptyRange);\n      onChange(emptyRange);\n\n      setFirstMonth(today);\n      setSecondMonth(addMonths(firstMonth, 1));\n    }\n  };\n\n  const onDayClick = (day: Date) => {\n    if (startDate && !endDate && !isBefore(day, startDate)) {\n      const newRange = { startDate, endDate: day };\n      onChange(newRange);\n      setDateRange(newRange);\n    } else {\n      setDateRange({ startDate: day, endDate: undefined });\n    }\n    setHoverDay(day);\n  };\n\n  const onMonthNavigate = (marker: Marker, action: NavigationAction) => {\n    if (marker === MARKERS.FIRST_MONTH) {\n      const firstNew = addMonths(firstMonth, action);\n      if (isBefore(firstNew, secondMonth)) setFirstMonth(firstNew);\n    } else {\n      const secondNew = addMonths(secondMonth, action);\n      if (isBefore(firstMonth, secondNew)) setSecondMonth(secondNew);\n    }\n  };\n\n  const onDayHover = (date: Date) => {\n    if (startDate && !endDate) {\n      if (!hoverDay || !isSameDay(date, hoverDay)) {\n        setHoverDay(date);\n      }\n    }\n  };\n\n  // helpers\n  const inHoverRange = (day: Date) => (startDate\n      && !endDate\n      && hoverDay\n      && isAfter(hoverDay, startDate)\n      && isWithinInterval(day, { start: startDate, end: hoverDay })) as boolean;\n\n  const helpers = {\n    inHoverRange,\n  };\n\n  const handlers = {\n    onDayClick,\n    onDayHover,\n    onMonthNavigate,\n  };\n\n  return open ? (\n    <Menu\n      dateRange={dateRange}\n      minDate={minDateValid}\n      maxDate={maxDateValid}\n      ranges={definedRanges}\n      firstMonth={firstMonth}\n      secondMonth={secondMonth}\n      setFirstMonth={setFirstMonthValidated}\n      setSecondMonth={setSecondMonthValidated}\n      setDateRange={setDateRangeValidated}\n      helpers={helpers}\n      handlers={handlers}\n      locale={locale}\n      labels={menuLabels}\n      button={menuButton}\n      bgColor={bgColor}\n      definedRangesMenuIsShown={definedRangesMenuIsShown}\n      buttonMargin={buttonMargin}\n    />\n  ) : null;\n};\n\nexport default DateRangePicker;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { Box } from '@mui/material';\nimport DateRangePicker from './DateRangePicker';\nimport { DateRange, DefinedRange, Labels, MenuButton, MenuLabels } from '../types';\n\nexport interface DateRangePickerWrapperProps {\n  open: boolean;\n  toggle: () => void;\n  initialDateRange?: DateRange;\n  definedRanges?: DefinedRange[];\n  minDate?: Date | string;\n  maxDate?: Date | string;\n  onChange: (dateRange: DateRange) => void;\n  closeOnClickOutside?: boolean;\n  wrapperClassName?: string;\n  locale?: Locale;\n  labels?: Labels;\n  menuLabels?: MenuLabels;\n  menuButton?: MenuButton;\n  bgColor?: string;\n  definedRangesMenuIsShown?: boolean;\n  buttonMargin?: string | number;\n}\n\nconst DateRangePickerWrapper: React.FunctionComponent<DateRangePickerWrapperProps> = (\n  props: DateRangePickerWrapperProps,\n) => {\n  const { wrapperClassName } = props;\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Box\n        sx={{ position: 'relative', display: 'inline-block', zIndex: 1 }}\n        className={wrapperClassName}\n      >\n        <DateRangePicker {...props} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default DateRangePickerWrapper;\n","import React from \"react\";\nimport DateRangePickerWrapper, { DateRangePickerWrapperProps } from \"./DateRangePickerWrapper\";\n\nconst DateRangePickerExporter: React.FunctionComponent<DateRangePickerWrapperProps> = (\n  props: DateRangePickerWrapperProps\n) => (\n  <DateRangePickerWrapper\n    {...props}\n  />\n);\n\nexport default DateRangePickerExporter;\n"],"names":["startOfWeek","startOfMonth","endOfWeek","endOfMonth","isBefore","addDays","isSameDay","isWithinInterval","parseISO","isValid","max","min","isSameMonth","addMonths","startOfDay","addWeeks","startOfYear","endOfYear","addYears","setMonth","setYear","React","Grid","IconButton","ChevronLeft","FormControl","Select","getMonth","MenuItem","getYear","ChevronRight","Box","Typography","Paper","format","isToday","getDate","List","ListItemButton","ListItemText","differenceInCalendarMonths","Divider","ArrowRightAlt","Button","isAfter"],"mappings":"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"}